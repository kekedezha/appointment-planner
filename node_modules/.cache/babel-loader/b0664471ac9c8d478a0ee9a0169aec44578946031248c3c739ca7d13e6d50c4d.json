{"ast":null,"code":"var _jsxFileName = \"/Volumes/Dezha's HD/Codecademy/Projects/03 - Front-End Development/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n  let {\n    contacts,\n    addContacts\n  } = _ref;\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\n  const [currentName, setCurrentName] = useState(\"\");\n  const [currentPhone, setCurrentPhone] = useState(\"\");\n  const [currentEmail, setCurrentEmail] = useState(\"\");\n  const [containsDuplicate, setContainsDuplicate] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\n    if (containsDuplicate === false) {\n      addContacts(currentName, currentPhone, currentEmail);\n      setCurrentName('');\n      setCurrentPhone('');\n      setCurrentEmail('');\n    }\n  };\n\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\n  useEffect(() => {\n    for (let i = 0; i < contacts.length; i++) {\n      if (contacts[i] === currentName) {\n        alert(\"Name being entered already exists in Contacts. Please use a different name or check below if you've already been added below.\");\n        setContainsDuplicate(true);\n      } else {\n        setContainsDuplicate(false);\n      }\n    }\n  }, [contacts, currentName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        name: currentName,\n        setName: setCurrentName,\n        phone: currentPhone,\n        setPhone: setCurrentPhone,\n        email: currentEmail,\n        setEmail: setCurrentEmail,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        contacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"0oKL2zf+cMO3QK9RIEJJbd2SWT0=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","ContactsPage","_ref","_s","contacts","addContacts","currentName","setCurrentName","currentPhone","setCurrentPhone","currentEmail","setCurrentEmail","containsDuplicate","setContainsDuplicate","handleSubmit","e","preventDefault","i","length","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","name","setName","phone","setPhone","email","setEmail","_c","$RefreshReg$"],"sources":["/Volumes/Dezha's HD/Codecademy/Projects/03 - Front-End Development/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({contacts, addContacts}) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const [currentName, setCurrentName] = useState(\"\");\r\n  const [currentPhone, setCurrentPhone] = useState(\"\");\r\n  const [currentEmail, setCurrentEmail] = useState(\"\");\r\n  const [containsDuplicate, setContainsDuplicate] = useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n   if (containsDuplicate === false){\r\n    addContacts(currentName, currentPhone, currentEmail);\r\n    setCurrentName('');\r\n    setCurrentPhone('');\r\n    setCurrentEmail('');\r\n   }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n useEffect(() => {\r\n  for (let i = 0; i < contacts.length; i++) { \r\n  if (contacts[i] === currentName) {\r\n    alert(\"Name being entered already exists in Contacts. Please use a different name or check below if you've already been added below.\")\r\n    setContainsDuplicate(true);\r\n  } else {\r\n    setContainsDuplicate(false);\r\n  }\r\n}\r\n }, [contacts, currentName])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n          name={currentName}\r\n          setName={setCurrentName}\r\n          phone={currentPhone}\r\n          setPhone={setCurrentPhone}\r\n          email={currentEmail}\r\n          setEmail={setCurrentEmail}\r\n          handleSubmit={handleSubmit} />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList contacts={contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}